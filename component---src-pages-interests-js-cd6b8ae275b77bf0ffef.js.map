{"version":3,"file":"component---src-pages-interests-js-cd6b8ae275b77bf0ffef.js","mappings":"uLAkCA,IA/BmB,SAAC,GAAkB,IAAD,EAAfA,EAAe,EAAfA,SACdC,GAAWD,MAAAA,GAAA,UAAAA,EAAUE,gBAAV,eAAoBC,MAAM,OAAQ,GAC7CC,EAAWH,EAASI,OAAS,EACR,KAAvBJ,EAASG,IAAkBH,EAASK,OAAOF,EAAU,GACzD,IAAIG,EAAU,GACZC,EAAU,GACZ,OACE,sBAAIC,UAAU,eACXR,EAASS,KAAI,SAACC,EAAGC,GAChB,KAAI,CAAC,KAAM,KAAM,gBAAgBC,QAAQF,IAAM,GAQ/C,MAPU,KAANA,GACFJ,EAAU,OACVC,EAAU,MAEVD,EAAO,GAAMI,EACbH,EAAO,GAAMA,EAAUG,EAAhB,KAEFC,IAAMX,EAASI,OAAS,EAC7B,0BAAKE,GAEL,0BACE,gBAAC,KAAD,CAAMO,GAAIN,EAASO,IAAKJ,GACrBJ,U,gHC6Df,UA5EqB,SAAC,GAAwB,IAAtBS,EAAqB,EAArBA,KAAMhB,EAAe,EAAfA,SACtBiB,GAAOC,EAAAA,EAAAA,KACPC,EAAYH,EAAKI,OAAOC,MACxBC,EAAOH,EAAUT,KAAI,SAAAa,GACzB,MAAO,CAAEC,MAAOD,EAAKE,YAAYD,MAAOE,KAAMH,EAAKE,YAAYC,SAGjE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKF,MAAM,kBACX,gBAAC,IAAD,CAAYxB,SAAUA,IACtB,4BACE,8BACE,0BAAKiB,EAAKU,cAAc,CAAEC,GAAI,mBAC9B,yBAAIX,EAAKU,cAAc,CAAEC,GAAI,mBAE/B,2BAASnB,UAAU,eAChBU,EAAUT,KAAI,SAAAmB,GACb,OACE,uBAAKpB,UAAU,gBACb,gBAAC,KAAD,CACEK,GAAE,cAAgBe,EAASJ,YAAYC,KACvCX,IAAKc,EAASL,MACdM,MAAO,CAAER,KAAMA,IAEf,uBAAKb,UAAU,WACb,gBAAC,IAAD,CACEA,UAAU,OACVsB,MAAOF,EAASJ,YAAYO,MAAMC,gBAAgBF,SAGtD,0BAAKF,EAASJ,YAAYD,OAC1B,qBAAGA,MAAOK,EAASJ,YAAYS,UAC5BC,EAAAA,EAAAA,IAAQN,EAASJ,YAAYS,QAAS,GAAI,GAAI","sources":["webpack://youngkinam's_homepage_madeof_gatsby/./src/components/BreadCrumb.js","webpack://youngkinam's_homepage_madeof_gatsby/./src/pages/interests.js"],"sourcesContent":["import React from \"react\"\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\n\nconst BreadCrumb = ({ location }) => {\n  const pathlist = location?.pathname?.split(\"/\") || []\n  const lastindx = pathlist.length - 1\n  if (pathlist[lastindx] === \"\") pathlist.splice(lastindx, 1)\n  let pathadd = \"\",\n    linkadd = \"\"\n  return (\n    <ul className=\"breadcrumbs\">\n      {pathlist.map((k, i) => {\n        if ([\"ko\", \"en\", \"gatsbymyhome\"].indexOf(k) > -1) return\n        if (k === \"\") {\n          pathadd = \"Home\"\n          linkadd = \"/\"\n        } else {\n          pathadd = `${k}`\n          linkadd = `${linkadd}${k}/`\n        }\n        return i === pathlist.length - 1 ? (\n          <li>{pathadd}</li>\n        ) : (\n          <li>\n            <Link to={linkadd} key={k}>\n              {pathadd}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default BreadCrumb\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Breadcrumb from \"../components/BreadCrumb\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/SEO\"\nimport Img from \"gatsby-image\"\nimport { wordCut } from \"../utility\"\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\nimport { useIntl } from \"react-intl\"\n\nconst InterestList = ({ data, location }) => {\n  const intl = useIntl()\n  const interests = data.allMdx.nodes\n  const list = interests.map(work => {\n    return { title: work.frontmatter.title, slug: work.frontmatter.slug }\n  })\n\n  return (\n    <Layout>\n      <Seo title=\"Interest List\" />\n      <Breadcrumb location={location} />\n      <main>\n        <header>\n          <h1>{intl.formatMessage({ id: \"interest-head\" })}</h1>\n          <p>{intl.formatMessage({ id: \"interest-sub\" })}</p>\n        </header>\n        <section className=\"bodycontent\">\n          {interests.map(interest => {\n            return (\n              <div className=\"ImgContainer\">\n                <Link\n                  to={`/interests/${interest.frontmatter.slug}`}\n                  key={interest.title}\n                  state={{ list: list }}\n                >\n                  <div className=\"Img2div\">\n                    <Img\n                      className=\"Img2\"\n                      fluid={interest.frontmatter.thumb.childImageSharp.fluid}\n                    />\n                  </div>\n                  <h2>{interest.frontmatter.title}</h2>\n                  <p title={interest.frontmatter.excerpt}>\n                    {wordCut(interest.frontmatter.excerpt, 80, \"\", \"...\")}\n                  </p>\n                </Link>\n              </div>\n            )\n          })}\n        </section>\n      </main>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query MyInterest($locale: String!) {\n    allMdx(\n      filter: {\n        fields: { locale: { eq: $locale } }\n        frontmatter: { type: { eq: \"interest\" } }\n      }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          demo\n          videoTitle\n          videoSourceURL\n          thumb {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          slug\n          seq\n          npmorg\n          github\n          excerpt\n          type\n        }\n      }\n    }\n  }\n`\nexport default InterestList\n"],"names":["location","pathlist","pathname","split","lastindx","length","splice","pathadd","linkadd","className","map","k","i","indexOf","to","key","data","intl","useIntl","interests","allMdx","nodes","list","work","title","frontmatter","slug","formatMessage","id","interest","state","fluid","thumb","childImageSharp","excerpt","wordCut"],"sourceRoot":""}