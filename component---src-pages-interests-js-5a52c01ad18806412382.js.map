{"version":3,"file":"component---src-pages-interests-js-5a52c01ad18806412382.js","mappings":"uLAkCA,IA/BmB,SAAC,GAAkB,IAAD,EAAfA,EAAe,EAAfA,SACdC,GAAWD,MAAAA,GAAA,UAAAA,EAAUE,gBAAV,eAAoBC,MAAM,OAAQ,GAC7CC,EAAWH,EAASI,OAAS,EACR,KAAvBJ,EAASG,IAAkBH,EAASK,OAAOF,EAAU,GACzD,IAAIG,EAAU,GACZC,EAAU,GACZ,OACE,sBAAIC,UAAU,eACXR,EAASS,KAAI,SAACC,EAAGC,GAChB,KAAI,CAAC,KAAM,KAAM,gBAAgBC,QAAQF,IAAM,GAQ/C,MAPU,KAANA,GACFJ,EAAU,OACVC,EAAU,MAEVD,EAAO,GAAMI,EACbH,EAAO,GAAMA,EAAUG,EAAhB,KAEFC,IAAMX,EAASI,OAAS,EAC7B,0BAAKE,GAEL,0BACE,gBAAC,KAAD,CAAMO,GAAIN,EAASO,IAAKJ,GACrBJ,U,gHC4Df,UA3EqB,SAAC,GAAwB,IAAtBS,EAAqB,EAArBA,KAAMhB,EAAe,EAAfA,SACtBiB,GAAOC,EAAAA,EAAAA,KACPC,EAAYH,EAAKI,OAAOC,MACxBC,EAAOH,EAAUT,KAAI,SAAAa,GACzB,MAAO,CAAEC,MAAOD,EAAKE,YAAYD,MAAOE,KAAMH,EAAKE,YAAYC,SAGjE,OADAC,QAAQC,IAAIT,GAEV,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKK,MAAM,kBACX,gBAAC,IAAD,CAAYxB,SAAUA,IACtB,4BACE,8BACE,0BAAKiB,EAAKY,cAAc,CAAEC,GAAI,mBAC9B,yBAAIb,EAAKY,cAAc,CAAEC,GAAI,mBAE/B,2BAASrB,UAAU,eAChBU,EAAUT,KAAI,SAAAqB,GACb,OACE,uBAAKtB,UAAU,6BACb,gBAAC,KAAD,CACEK,GAAE,cAAgBiB,EAASN,YAAYC,KACvCX,IAAKgB,EAASP,MACdQ,MAAO,CAAEV,KAAMA,IAEf,uBAAKW,MAAO,CAAEC,UAAW,GAAIC,cAAe,WAC1C,gBAAC,EAAAC,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAASP,EAASN,YAAYc,UAEpD,0BAAKR,EAASN,YAAYD,OAC1B,qBAAGA,MAAOO,EAASN,YAAYe,UAC5BC,EAAAA,EAAAA,IAAQV,EAASN,YAAYe,QAAS,GAAI,GAAI","sources":["webpack://youngkinam's_homepage_madeof_gatsby/./src/components/BreadCrumb.js","webpack://youngkinam's_homepage_madeof_gatsby/./src/pages/interests.js"],"sourcesContent":["import React from \"react\"\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\n\nconst BreadCrumb = ({ location }) => {\n  const pathlist = location?.pathname?.split(\"/\") || []\n  const lastindx = pathlist.length - 1\n  if (pathlist[lastindx] === \"\") pathlist.splice(lastindx, 1)\n  let pathadd = \"\",\n    linkadd = \"\"\n  return (\n    <ul className=\"breadcrumbs\">\n      {pathlist.map((k, i) => {\n        if ([\"ko\", \"en\", \"gatsbymyhome\"].indexOf(k) > -1) return\n        if (k === \"\") {\n          pathadd = \"Home\"\n          linkadd = \"/\"\n        } else {\n          pathadd = `${k}`\n          linkadd = `${linkadd}${k}/`\n        }\n        return i === pathlist.length - 1 ? (\n          <li>{pathadd}</li>\n        ) : (\n          <li>\n            <Link to={linkadd} key={k}>\n              {pathadd}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default BreadCrumb\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Breadcrumb from \"../components/BreadCrumb\"\r\nimport Layout from \"../components/Layout\"\r\nimport Seo from \"../components/SEO\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport { wordCut } from \"../utility\"\r\nimport { LocalizedLink as Link } from \"gatsby-theme-i18n\"\r\nimport { useIntl } from \"react-intl\"\r\n\r\nconst InterestList = ({ data, location }) => {\r\n  const intl = useIntl()\r\n  const interests = data.allMdx.nodes\r\n  const list = interests.map(work => {\r\n    return { title: work.frontmatter.title, slug: work.frontmatter.slug }\r\n  })\r\n  console.log(interests)\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Interest List\" />\r\n      <Breadcrumb location={location} />\r\n      <main>\r\n        <header>\r\n          <h1>{intl.formatMessage({ id: \"interest-head\" })}</h1>\r\n          <p>{intl.formatMessage({ id: \"interest-sub\" })}</p>\r\n        </header>\r\n        <section className=\"bodycontent\">\r\n          {interests.map(interest => {\r\n            return (\r\n              <div className=\"ImgContainer ContanierBox\">\r\n                <Link\r\n                  to={`/interests/${interest.frontmatter.slug}`}\r\n                  key={interest.title}\r\n                  state={{ list: list }}\r\n                >\r\n                  <div style={{ minHeight: 50, verticalAlign: \"middle\" }}>\r\n                    <GatsbyImage image={getImage(interest.frontmatter.thumb)} />\r\n                  </div>\r\n                  <h2>{interest.frontmatter.title}</h2>\r\n                  <p title={interest.frontmatter.excerpt}>\r\n                    {wordCut(interest.frontmatter.excerpt, 80, \"\", \"...\")}\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            )\r\n          })}\r\n        </section>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\nexport const query = graphql`\r\n  query MyInterest($locale: String!) {\r\n    allMdx(\r\n      filter: {\r\n        fields: { locale: { eq: $locale } }\r\n        frontmatter: { type: { eq: \"interest\" } }\r\n      }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          demo\r\n          videoTitle\r\n          videoSourceURL\r\n          thumb {\r\n            childImageSharp {\r\n              gatsbyImageData(\r\n                width: 400\r\n                blurredOptions: { width: 50 }\r\n                placeholder: BLURRED\r\n              )\r\n            }\r\n          }\r\n          slug\r\n          seq\r\n          npmorg\r\n          github\r\n          excerpt\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default InterestList\r\n"],"names":["location","pathlist","pathname","split","lastindx","length","splice","pathadd","linkadd","className","map","k","i","indexOf","to","key","data","intl","useIntl","interests","allMdx","nodes","list","work","title","frontmatter","slug","console","log","formatMessage","id","interest","state","style","minHeight","verticalAlign","G","image","getImage","thumb","excerpt","wordCut"],"sourceRoot":""}